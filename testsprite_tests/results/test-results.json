{
  "timestamp": "2025-08-26T18:36:09.250Z",
  "summary": {
    "total": 9,
    "passed": 9,
    "failed": 0
  },
  "results": [
    {
      "suite": "Authentication Tests",
      "file": "auth-tests.js",
      "result": {
        "success": true,
        "output": "🔐 Running Authentication Tests...\n  📝 Testing User Registration...\n    ❌ User Registration: FAIL\n  🔑 Testing User Login...\n    ✅ User Login: PASS\n  🎫 Testing Token Validation...\n    ❌ Token Validation: FAIL\n  👥 Testing Role-Based Access...\n    ❌ Role-Based Access: FAIL\n  🔄 Testing Password Reset...\n    ❌ Password Reset: FAIL\n\n📊 Authentication Test Results:\n========================================\nTotal Tests: 5\nPassed: 1 ✅\nFailed: 4 ❌\nSkipped: 0 ⚠️\n\nDetailed Results:\n❌ User Registration: FAIL\n    Request failed with status code 400\n✅ User Login: PASS\n    User logged in successfully, token received\n❌ Token Validation: FAIL\n    Request failed with status code 404\n❌ Role-Based Access: FAIL\n    Request failed with status code 403\n❌ Password Reset: FAIL\n    Request failed with status code 500\n",
        "code": 0
      }
    },
    {
      "suite": "API Endpoint Tests",
      "file": "api-tests.js",
      "result": {
        "success": true,
        "output": "🌐 Running API Endpoint Tests...\n  🔑 Authenticating for API tests...\n    ✅ Authentication successful\n  📈 Testing Stocks API...\n    ❌ Stocks API: FAIL\n  🪙 Testing Crypto API...\n    ❌ Crypto API: FAIL\n  🌱 Testing Carbon Credits API...\n    ❌ Carbon Credits API: FAIL\n  📊 Testing Dashboard API...\n    ✅ Dashboard API: PASS\n  💼 Testing Portfolio API...\n    ✅ Portfolio API: PASS\n  🔮 Testing Forecasting API...\n    ❌ Forecasting API: FAIL\n\n📊 API Test Results:\n========================================\nTotal Tests: 6\nPassed: 2 ✅\nFailed: 4 ❌\nSkipped: 0 ⚠️\n\nDetailed Results:\n❌ Stocks API: FAIL\n    Request failed with status code 404\n❌ Crypto API: FAIL\n    Request failed with status code 404\n❌ Carbon Credits API: FAIL\n    Request failed with status code 404\n✅ Dashboard API: PASS\n    Dashboard data retrieved successfully\n✅ Portfolio API: PASS\n    Portfolio data retrieved successfully\n❌ Forecasting API: FAIL\n    Request failed with status code 404\n",
        "code": 0
      }
    },
    {
      "suite": "WebSocket Tests",
      "file": "websocket-tests.js",
      "result": {
        "success": true,
        "output": "🔌 Running WebSocket Tests...\n  📈 Testing Stocks WebSocket...\n",
        "code": 0
      }
    },
    {
      "suite": "Database Tests",
      "file": "database-tests.js",
      "result": {
        "success": true,
        "output": "🗄️  Running Database Tests...\n  🔌 Initializing database connection...\n    ⚠️  Database connection failed, some tests may be skipped\n    Error: password authentication failed for user \"postgres\"\n  🔗 Testing Database Connection...\n    ❌ Database Connection: FAIL\n  📋 Testing Table Existence...\n    ❌ Table Existence: FAIL\n  🔄 Testing CRUD Operations...\n    ❌ CRUD Operations: FAIL\n  🔒 Testing Data Integrity...\n    ❌ Data Integrity: FAIL\n  ⚡ Testing Performance Queries...\n    ❌ Performance Queries: FAIL\n\n📊 Database Test Results:\n========================================\nTotal Tests: 5\nPassed: 0 ✅\nFailed: 5 ❌\nSkipped: 0 ⚠️\nWarnings: 0 ⚠️\nSuccess Rate: 0.0%\n\nDetailed Results:\n❌ Database Connection: FAIL\n    password authentication failed for user \"postgres\"\n❌ Table Existence: FAIL\n    password authentication failed for user \"postgres\"\n❌ CRUD Operations: FAIL\n    password authentication failed for user \"postgres\"\n❌ Data Integrity: FAIL\n    password authentication failed for user \"postgres\"\n❌ Performance Queries: FAIL\n    password authentication failed for user \"postgres\"\n  🧹 Cleaning up database connections...\n    ✅ Database connections closed\n",
        "code": 0
      }
    },
    {
      "suite": "AI Forecasting Tests",
      "file": "forecasting-tests.js",
      "result": {
        "success": true,
        "output": "🔮 Running AI Forecasting Tests...\n  🔑 Authenticating for forecasting tests...\n    ✅ Authentication successful\n  📊 Testing Prophet Forecasting...\n    ❌ Prophet Forecasting: FAIL\n  📈 Testing ARIMA Forecasting...\n    ❌ ARIMA Forecasting: FAIL\n  📉 Testing Simple Forecasting...\n    ❌ Simple Forecasting: FAIL\n  🎯 Testing Forecasting Accuracy...\n    ❌ Forecasting Accuracy: FAIL\n  ⚡ Testing Model Performance...\n    ❌ Model Performance: FAIL\n    📊 Performance Details:\n      ⚠️ prophet: 11ms (Request failed with status code 404)\n      ⚠️ arima: 8ms (Request failed with status code 404)\n      ⚠️ simple: 8ms (Request failed with status code 404)\n\n📊 AI Forecasting Test Results:\n========================================\nTotal Tests: 5\nPassed: 0 ✅\nFailed: 5 ❌\nSkipped: 0 ⚠️\nWarnings: 0 ⚠️\nSuccess Rate: 0.0%\n\nDetailed Results:\n❌ Prophet Forecasting: FAIL\n    Request failed with status code 404\n❌ ARIMA Forecasting: FAIL\n    Request failed with status code 404\n❌ Simple Forecasting: FAIL\n    Request failed with status code 404\n❌ Forecasting Accuracy: FAIL\n    Request failed with status code 404\n❌ Model Performance: FAIL\n    All models failed\n",
        "code": 0
      }
    },
    {
      "suite": "Performance Tests",
      "file": "performance-tests.js",
      "result": {
        "success": true,
        "output": "⚡ Running Performance Tests...\n  🔑 Authenticating for performance tests...\n    ✅ Authentication successful\n  ⏱️  Testing Response Time...\n    ✅ Response Time: PASS\n    📊 Response Time Details:\n      ⚠️ /api/stocks: 13ms (Request failed with status code 404)\n      ⚠️ /api/crypto: 2ms (Request failed with status code 404)\n      ⚠️ /api/carbon/projects: 3ms (Request failed with status code 404)\n      ✅ /api/dashboard: 699ms \n  📊 Testing Load Testing...\n    🎯 Load Test: 100 users, 60s duration, 10s ramp-up\n    ✅ Load Testing: PASS\n    📈 Results: 100/100 successful, 1.43 req/s throughput\n  🔥 Testing Stress Testing...\n    🎯 Stress Test: 500 users, 120s duration, 30s ramp-up\n    ❌ Stress Testing: FAIL\n    📈 Results: 0/1500 successful, 100.0% error rate, 0.00 req/s throughput\n  🔄 Testing Concurrent Requests...\n    🎯 Testing 50 concurrent requests...\n    ❌ Concurrent Requests: FAIL\n    📈 Results: 0/50 successful (0.0%), Total time: 267ms\n  💾 Testing Memory Usage...\n    ✅ Memory Usage: PASS\n    📊 Memory: +1.68MB, Final: 13.38MB\n\n📊 Performance Test Results:\n========================================\nTotal Tests: 5\nPassed: 3 ✅\nFailed: 2 ❌\nWarnings: 0 ⚠️\nSuccess Rate: 60.0%\n\nDetailed Results:\n✅ Response Time: PASS\n    Average response time: 699ms (min: 2ms, max: 699ms)\n✅ Load Testing: PASS\n    Success rate: 100.0%, Throughput: 1.43 req/s, Avg response: 905ms\n❌ Stress Testing: FAIL\n    Error rate: 100.0%, Throughput: 0.00 req/s, Avg response: 0ms\n❌ Concurrent Requests: FAIL\n    Success rate: 0.0%, Total time: 267ms, 50 concurrent requests\n✅ Memory Usage: PASS\n    Memory increase: 1.68MB, Final heap: 13.38MB\n\n📊 Performance Metrics Summary:\n==================================================\nAverage Response Time: 699ms\nLoad Test Throughput: 1.43 req/s\nLoad Test Success Rate: 100.0%\n\n📁 Detailed performance report saved to: testsprite_tests/results/performance-report.json\n",
        "code": 0
      }
    },
    {
      "suite": "UI Integration Tests",
      "file": "ui-integration-tests.js",
      "result": {
        "success": true,
        "output": "🎨 Running UI Integration Tests...\n  🔑 Authenticating for UI tests...\n    ✅ Authentication successful\n  📈 Testing Stock Page Accessibility...\n    ❌ Stock Page Accessibility: FAIL - Status Error\n  🎯 Testing Asset Selection Logic...\n    ❌ Asset Selection Logic: FAIL\n  🔮 Testing Forecast Display Logic...\n    ❌ Forecast Display Logic: FAIL\n  🔀 Testing Mixed Asset Forecasts...\n    ❌ Mixed Asset Forecasts: FAIL\n  🏷️  Testing Asset Type Display...\n    ❌ Asset Type Display: FAIL - Page Error\n\n📊 UI Integration Test Results:\n========================================\nTotal Tests: 5\nPassed: 0 ✅\nFailed: 5 ❌\nSuccess Rate: 0.0%\n\nDetailed Results:\n❌ Stock Page Accessibility: FAIL\n    Stock page returned status 404\n❌ Asset Selection Logic: FAIL\n    Asset selection issues: stocks selection error: Request failed with status code 404, crypto selection error: Request failed with status code 404, mixed selection error: Request failed with status code 404\n❌ Forecast Display Logic: FAIL\n    Request failed with status code 404\n❌ Mixed Asset Forecasts: FAIL\n    Request failed with status code 404\n❌ Asset Type Display: FAIL\n    Forecast page returned status 404\n",
        "code": 0
      }
    },
    {
      "suite": "Stock Service Tests",
      "file": "stock-service-tests.js",
      "result": {
        "success": true,
        "output": "📈 Running Stock Service Tests...\n  🔑 Authenticating for stock service tests...\n    ✅ Authentication successful\n  🏥 Testing Stock Service Health...\n    ❌ Stock Service Health: FAIL\n  🔌 Testing Stock API Endpoints...\n    ❌ Stock API Endpoints: FAIL - Low Success Rate\n    📊 Endpoint Status: 1/4 working\n  📊 Testing Stock Data Retrieval...\n    ❌ Stock Data Retrieval: FAIL - Data Retrieval Issues\n  🌐 Testing Stock Page Rendering...\n    ❌ Stock Page Rendering: FAIL - Page Error\n  🔐 Testing Stock Authentication...\n    ❌ Stock Authentication: FAIL\n  🔌 Testing Stock WebSocket Connection...\n",
        "code": 0
      }
    },
    {
      "suite": "Forecast Mismatch Tests",
      "file": "forecast-mismatch-tests.js",
      "result": {
        "success": true,
        "output": "🔀 Running Forecast Mismatch Tests...\n  🔑 Authenticating for forecast mismatch tests...\n    ✅ Authentication successful\n  🔍 Testing Asset Type Detection...\n    ❌ Asset Type Detection: FAIL - Low Detection Rate\n  📊 Testing Forecast Section Logic...\n    ❌ Forecast Section Logic: FAIL\n  🔀 Testing Mixed Asset Handling...\n    ❌ Mixed Asset Handling: FAIL\n  🎨 Testing UI Component Rendering...\n    ❌ UI Component Rendering: FAIL - Page Error\n  ✅ Testing Asset Selection Validation...\n    ❌ Asset Selection Validation: FAIL - Validation Issues\n\n📊 Forecast Mismatch Test Results:\n========================================\nTotal Tests: 5\nPassed: 0 ✅\nFailed: 5 ❌\nSuccess Rate: 0.0%\n\nDetailed Results:\n❌ Asset Type Detection: FAIL\n    Only 0/6 assets correctly typed. Errors: AAPL: both endpoints failed - Request failed with status code 404, ADBE: both endpoints failed - Request failed with status code 404, AMD: both endpoints failed - Request failed with status code 404, BTC: both endpoints failed - Request failed with status code 404, ETH: both endpoints failed - Request failed with status code 404, VETUSDT: both endpoints failed - Request failed with status code 404\n❌ Forecast Section Logic: FAIL\n    Request failed with status code 404\n❌ Mixed Asset Handling: FAIL\n    Request failed with status code 404\n❌ UI Component Rendering: FAIL\n    Forecast page returned status 404\n❌ Asset Selection Validation: FAIL\n    Only 0/4 test cases correct. Errors: Valid Mixed Selection: API error - Request failed with status code 404, Too Many Assets: API error - Request failed with status code 404, Invalid Asset Symbol: API error - Request failed with status code 404, Empty Selection: API error - Request failed with status code 404\n\n🔧 Forecast Mismatch Fix Recommendations:\n==================================================\n❌ Issues found. Here are the recommended fixes:\n\n1. Asset Type Detection:\n   Issue: Only 0/6 assets correctly typed. Errors: AAPL: both endpoints failed - Request failed with status code 404, ADBE: both endpoints failed - Request failed with status code 404, AMD: both endpoints failed - Request failed with status code 404, BTC: both endpoints failed - Request failed with status code 404, ETH: both endpoints failed - Request failed with status code 404, VETUSDT: both endpoints failed - Request failed with status code 404\n   Fix: Implement proper asset type detection logic\n   - Create asset type mapping service\n   - Add asset type validation in API endpoints\n   - Implement fallback detection methods\n\n2. Forecast Section Logic:\n   Issue: Request failed with status code 404\n   Fix: Fix forecast section categorization\n   - Update forecast API to properly categorize assets\n   - Remove hardcoded section logic\n   - Implement dynamic section generation\n\n3. Mixed Asset Handling:\n   Issue: Request failed with status code 404\n   Fix: Enable mixed asset selection support\n   - Update asset selection validation\n   - Modify forecast generation for mixed assets\n   - Update UI to handle mixed selections\n\n4. UI Component Rendering:\n   Issue: Forecast page returned status 404\n   Fix: Update UI components for unified display\n   - Replace separate forecast sections with unified view\n   - Add asset type indicators to forecast cards\n   - Update component props and state management\n\n5. Asset Selection Validation:\n   Issue: Only 0/4 test cases correct. Errors: Valid Mixed Selection: API error - Request failed with status code 404, Too Many Assets: API error - Request failed with status code 404, Invalid Asset Symbol: API error - Request failed with status code 404, Empty Selection: API error - Request failed with status code 404\n   Fix: Implement proper asset selection validation\n   - Add validation rules for mixed asset selection\n   - Implement asset symbol validation\n   - Add maximum asset limit enforcement\n\n🚀 Priority Actions:\n1. Implement unified asset type detection service\n2. Update forecast API to handle mixed assets\n3. Replace separate forecast sections with unified view\n4. Add asset type indicators to forecast cards\n5. Update asset selection validation logic\n6. Test mixed asset scenarios thoroughly\n",
        "code": 0
      }
    }
  ]
}